@page
@model zEVRental.RazorWebApp.CuongCLA.Pages.PaymentCuongClas.IndexModel
@{
    ViewData["Title"] = "Payment Management";
}

<!-- Custom CSS -->
<style>
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem 0;
        margin-bottom: 2rem;
        border-radius: 0 0 1rem 1rem;
    }

    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: all 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

    .table-container {
        background: white;
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .table thead th {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border: none;
        font-weight: 600;
        color: #495057;
        padding: 1rem 0.75rem;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .table tbody tr {
        transition: all 0.3s ease;
    }

        .table tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.01);
        }

    .table tbody td {
        padding: 1rem 0.75rem;
        vertical-align: middle;
        border-color: #e9ecef;
    }

    .status-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-success {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .status-warning {
        background-color: #fff3cd;
        color: #856404;
    }

    .status-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    .status-info {
        background-color: #d4edda;
        color: #155724;
    }

    .btn-action {
        padding: 0.25rem 0.5rem;
        font-size: 0.75rem;
        border-radius: 0.375rem;
        text-decoration: none;
        transition: all 0.3s ease;
        margin: 0 0.125rem;
    }

        .btn-action:hover {
            transform: translateY(-1px);
            text-decoration: none;
        }

    .btn-edit {
        background-color: #0d6efd;
        color: white;
    }

        .btn-edit:hover {
            background-color: #0b5ed7;
            color: white;
        }

    .btn-view {
        background-color: #6c757d;
        color: white;
    }

        .btn-view:hover {
            background-color: #5c636a;
            color: white;
        }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background-color: #bb2d3b;
            color: white;
        }

    .search-filter-section {
        background: white;
        padding: 1.5rem;
        border-radius: 1rem;
        margin-bottom: 2rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .stats-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 1rem;
        padding: 1.5rem;
        text-align: center;
    }

    .stats-number {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .amount-cell {
        font-weight: 600;
        color: #28a745;
    }

    .date-cell {
        color: #6c757d;
        font-size: 0.875rem;
    }

    .responsive-table {
        min-width: 100%;
        overflow-x: auto;
    }

    /* Pagination Styles */
    .pagination-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 2rem 1rem;
        background: white;
        border-radius: 0 0 1rem 1rem;
    }

    .pagination {
        display: flex;
        list-style: none;
        padding: 0;
        margin: 0;
        gap: 0.25rem;
    }

        .pagination li {
            display: inline-block;
        }

            .pagination li a {
                display: block;
                padding: 0.5rem 0.75rem;
                min-width: 2.5rem;
                text-align: center;
                color: #667eea;
                background: white;
                border: 1px solid #dee2e6;
                border-radius: 0.375rem;
                text-decoration: none;
                transition: all 0.3s ease;
                font-weight: 500;
                cursor: pointer;
            }

                .pagination li a:hover {
                    background: #f8f9fa;
                    border-color: #667eea;
                    transform: translateY(-1px);
                }

            .pagination li.active a {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border-color: #667eea;
                pointer-events: none;
            }

            .pagination li.disabled a {
                color: #6c757d;
                background: #f8f9fa;
                border-color: #dee2e6;
                pointer-events: none;
                opacity: 0.5;
            }

            .pagination li.first a,
            .pagination li.last a,
            .pagination li.prev a,
            .pagination li.next a {
                font-weight: 600;
            }

    .pagination-info {
        text-align: center;
        color: #6c757d;
        margin-top: 1rem;
        font-size: 0.875rem;
    }

    .page-size-selector {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1rem;
        padding: 1rem;
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

        .page-size-selector label {
            margin: 0;
            font-weight: 500;
            color: #495057;
        }

        .page-size-selector select {
            padding: 0.375rem 0.75rem;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            cursor: pointer;
        }
</style>

<!-- Page Header -->
<div class="page-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-0">
                    <i class="fas fa-credit-card me-3"></i>
                    Payment Management
                </h1>
                <p class="mb-0 mt-2 opacity-75">Manage and track all payment transactions</p>
            </div>
            <div class="col-md-4 text-md-end">
                <a asp-page="Create" class="btn btn-light btn-lg">
                    <i class="fas fa-plus me-2"></i>
                    Create New Payment
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="stats-card">
                <div class="stats-number">@Model.PaymentCuongCla.Count()</div>
                <div>Total Payments</div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="stats-card" style="background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);">
                <div class="stats-number">@Model.PaymentCuongCla.Where(p => p.PaymentStatus == "Success").Count()</div>
                <div>Completed</div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="stats-card" style="background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%); color: #333;">
                <div class="stats-number">@Model.PaymentCuongCla.Where(p => p.PaymentStatus == "Pending").Count()</div>
                <div>Pending</div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="stats-card" style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); color: #333;">
                <div class="stats-number">@Model.PaymentCuongCla.Where(p => p.IsDeposit).Count()</div>
                <div>Deposits</div>
            </div>
        </div>
    </div>

    <!-- Payment Search -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h5 class="card-title text-primary mb-3"><i class="bi bi-search me-2"></i> Search Records</h5>
            <form asp-page="./Index" method="get">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label for="paymentMethodSearch" class="form-label">Payment Method</label>
                        <input type="text" class="form-control" id="paymentMethodSearch" name="paymentMethod" value="@Model.paymentMethod" placeholder="Enter payment method..." />
                    </div>
                    <div class="col-md-4">
                        <label for="amountSearch" class="form-label">Minimum Amount</label>
                        <input type="number" class="form-control" id="amountSearch" name="amount" value="@(Model.amount)" step="0.01" min="0" placeholder="Enter minimum amount..." />
                    </div>
                    <div class="col-md-4">
                        <label for="statusSearch" class="form-label">Payment Status</label>
                        <input type="text" class="form-control" id="statusSearch" name="status" value="@Model.status" placeholder="Enter payment status..." />
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-3">
                    <button class="btn btn-primary me-2" type="submit">
                        <i class="bi bi-search me-1"></i> Search
                    </button>
                    <a class="btn btn-outline-secondary" asp-page="./Index">
                        Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Page Size Selector -->
    <div class="page-size-selector">
        <label for="pageSize">Show:</label>
        <select id="pageSize" class="form-select form-select-sm" style="width: auto;">
            <option value="5">5 per page</option>
            <option value="10" selected>10 per page</option>
            <option value="20">20 per page</option>
            <option value="50">50 per page</option>
            <option value="100">100 per page</option>
        </select>
    </div>

    <!-- Payments Table -->
    <div class="table-container">
        <div class="table-responsive">
            <table class="table table-hover mb-0" id="paymentsTable">
                <thead>
                    <tr>
                        <th>
                            <i class="fas fa-calendar me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].PaymentDate)
                        </th>
                        <th>
                            <i class="fas fa-dollar-sign me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].Amount)
                        </th>
                        <th>
                            <i class="fas fa-credit-card me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].PaymentMethod)
                        </th>
                        <th>
                            <i class="fas fa-check-circle me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].PaymentStatus)
                        </th>
                        <th>
                            <i class="fas fa-undo me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].Notes)
                        </th>
                        <th>
                            <i class="fas fa-shield-alt me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].IsDeposit)
                        </th>
                        <th>
                            <i class="fas fa-undo me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].DepositReturnAmount)
                        </th>
                        <th>
                            <i class="fas fa-bookmark me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].Booking)
                        </th>
                        <th>
                            <i class="fas fa-user-cog me-1"></i>
                            @Html.DisplayNameFor(model => model.PaymentCuongCla[0].ProcessedByNavigation)
                        </th>
                        <th>
                            <i class="fas fa-cogs me-1"></i>
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody id="paymentsTableBody">
                    @foreach (var item in Model.PaymentCuongCla)
                    {
                        <tr class="payment-row" id= "@item.PaymentCuongClaid">
                            <td class="date-cell">
                                <i class="fas fa-calendar-alt me-2"></i>
                                @Html.DisplayFor(modelItem => item.PaymentDate)
                            </td>
                            <td class="amount-cell">
                                <strong>@Html.DisplayFor(modelItem => item.Amount)</strong>
                            </td>
                            <td>
                                <span class="badge bg-secondary">
                                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                                </span>
                            </td>
                            <td>
                                <span class="status-badge @(item.PaymentStatus == "Success" ? "status-success" :
                                                           item.PaymentStatus == "Pending" ? "status-warning" :
                                                           item.PaymentStatus == "Failed" ? "status-danger" : "status-info")">
                                    @Html.DisplayFor(modelItem => item.PaymentStatus)
                                </span>
                            </td>
                            <td class="amount-cell">
                                @Html.DisplayFor(modelItem => item.Notes)
                            </td>
                            <td>
                                @if (item.IsDeposit)
                                {
                                    <span class="badge bg-info">
                                        <i class="fas fa-shield-alt me-1"></i>Deposit
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-light text-dark">
                                        <i class="fas fa-money-bill me-1"></i>Payment
                                    </span>
                                }
                            </td>
                            <td class="amount-cell">
                                @Html.DisplayFor(modelItem => item.DepositReturnAmount)
                            </td>
                            <td>
                                @if (item.Booking != null)
                                {
                                    <a asp-page="/BookingCuongClas/Details" asp-route-id="@item.Booking.BookingCuongClaid"
                                       class="badge bg-primary text-decoration-none"
                                       title="View booking details">
                                        @Html.DisplayFor(modelItem => item.Booking.Customer.FullName) / @item.Booking.BookingCuongClaid
                                    </a>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td>
                                @if (item.ProcessedByNavigation != null)
                                {
                                    <small class="text-muted">
                                        <i class="fas fa-envelope me-1"></i>
                                        @Html.DisplayFor(modelItem => item.ProcessedByNavigation.Email)
                                    </small>
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td>
                                <div class="d-flex flex-wrap">
                                    <a asp-page="./Edit" asp-route-id="@item.PaymentCuongClaid" class="btn-action btn-edit" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-page="./Details" asp-route-id="@item.PaymentCuongClaid" class="btn-action btn-view" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-page="./Delete" asp-route-id="@item.PaymentCuongClaid" class="btn-action btn-delete" title="Delete"
                                       onclick="return confirm('Are you sure you want to delete this payment record?')">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Enhanced Pagination -->
        <div class="pagination-wrapper">
            <div class="pagination-container">
                <ul class="pagination" id="pagination-controls"></ul>
            </div>
        </div>
        <div class="pagination-info" id="pagination-info"></div>
    </div>
</div>

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        // Pagination configuration
        let currentPage = 1;
        let itemsPerPage = parseInt($('#pageSize').val()) || 10;
        let allRows = $('.payment-row');
        let totalItems = allRows.length;
        let totalPages = Math.ceil(totalItems / itemsPerPage);

        // Initialize pagination
        function initializePagination() {
            totalItems = $('.payment-row').length;
            totalPages = Math.ceil(totalItems / itemsPerPage);
            currentPage = 1;
            updatePagination();
            showPage(currentPage);
        }

        // Show specific page
        function showPage(pageNumber) {
            // Ensure page number is within bounds
            if (pageNumber < 1) pageNumber = 1;
            if (pageNumber > totalPages) pageNumber = totalPages;
            
            currentPage = pageNumber;
            
            // Hide all rows first
            allRows.hide();

            // Calculate range for current page
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = startIndex + itemsPerPage;

            // Show rows for current page
            allRows.slice(startIndex, endIndex).show();

            // Update pagination controls
            updatePagination();
            updatePaginationInfo();

            // Smooth scroll to table
            $('html, body').animate({
                scrollTop: $('#paymentsTable').offset().top - 100
            }, 300);
        }

        // Update pagination controls
        function updatePagination() {
            const paginationControls = $('#pagination-controls');
            paginationControls.empty();

            if (totalPages <= 1) {
                return; // Don't show pagination if only one page
            }

            // First page button
            const firstDisabled = currentPage === 1 ? 'disabled' : '';
            paginationControls.append(`
                <li class="first ${firstDisabled}">
                    <a href="javascript:void(0);" onclick="goToPage(1)">
                        <i class="fas fa-angle-double-left"></i> First
                    </a>
                </li>
            `);

            // Previous page button
            const prevDisabled = currentPage === 1 ? 'disabled' : '';
            paginationControls.append(`
                <li class="prev ${prevDisabled}">
                    <a href="javascript:void(0);" onclick="goToPage(${currentPage - 1})">
                        <i class="fas fa-angle-left"></i> Prev
                    </a>
                </li>
            `);

            // Page number buttons
            const maxVisiblePages = 7;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }

            for (let i = startPage; i <= endPage; i++) {
                const activeClass = i === currentPage ? 'active' : '';
                paginationControls.append(`
                    <li class="page ${activeClass}">
                        <a href="javascript:void(0);" onclick="goToPage(${i})">${i}</a>
                    </li>
                `);
            }

            // Next page button
            const nextDisabled = currentPage === totalPages ? 'disabled' : '';
            paginationControls.append(`
                <li class="next ${nextDisabled}">
                    <a href="javascript:void(0);" onclick="goToPage(${currentPage + 1})">
                        Next <i class="fas fa-angle-right"></i>
                    </a>
                </li>
            `);

            // Last page button
            const lastDisabled = currentPage === totalPages ? 'disabled' : '';
            paginationControls.append(`
                <li class="last ${lastDisabled}">
                    <a href="javascript:void(0);" onclick="goToPage(${totalPages})">
                        Last <i class="fas fa-angle-double-right"></i>
                    </a>
                </li>
            `);
        }

        // Update pagination info
        function updatePaginationInfo() {
            const showingFrom = totalItems > 0 ? ((currentPage - 1) * itemsPerPage) + 1 : 0;
            const showingTo = Math.min(currentPage * itemsPerPage, totalItems);
            
            $('#pagination-info').html(`
                Showing <strong>${showingFrom}</strong> to <strong>${showingTo}</strong> 
                of <strong>${totalItems}</strong> payments
            `);
        }

        // Global function for page navigation
        window.goToPage = function(pageNumber) {
            if (pageNumber >= 1 && pageNumber <= totalPages && pageNumber !== currentPage) {
                showPage(pageNumber);
            }
        };

        // Handle page size change
        $('#pageSize').on('change', function() {
            itemsPerPage = parseInt($(this).val());
            allRows = $('.payment-row'); // Refresh rows reference
            initializePagination();
        });

        // Initialize pagination on page load
        initializePagination();

        // Re-initialize pagination when search results change
        $(document).on('paymentsUpdated', function() {
            allRows = $('.payment-row');
            initializePagination();
        });
    });
</script>

<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/zPaymentCuongclaHub").build();

    connection.start().then(function () {
        console.log("CuongCLA: Connected to the SignalR Hub");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("Receive_DeletePaymentCuongcla", function (PaymentCuongClaid) {
        $('#paymentsTableBody').find(`tr[id='${PaymentCuongClaid}']`).remove();
    });

    connection.on("Receive_CreatePaymentCuongcla", function (item) {
        console.log(item);
        var trPaymentCuongcla = 
        `   
        <tr class="payment-row" id="${item.paymentCuongClaid}">
                <td class="date-cell">
                    <i class="fas fa-calendar-alt me-2"></i>
                    ${new Date(item.paymentDate).toLocaleDateString()}
                </td>
                <td class="amount-cell">
                    <strong>${item.amount.toFixed(2)}</strong>
                </td>
                <td>
                    <span class="badge bg-secondary">
                        ${item.paymentMethod}
                    </span>
                </td>
                <td>
                    <span class="status-badge ${item.paymentStatus === "Success" ? "status-success" :
                                               item.paymentStatus === "Pending" ? "status-warning" :
                                               item.paymentStatus === "Failed" ? "status-danger" : "status-info"}">
                        ${item.paymentStatus}
                    </span>
                </td>
                <td class="amount-cell">
                    ${item.notes || ''}
                </td>
                <td>
                    ${item.isDeposit ? 
                        `<span class="badge bg-info"><i class="fas fa-shield-alt me-1"></i>Deposit</span>` : 
                        `<span class="badge bg-light text-dark"><i class="fas fa-money-bill me-1"></i>Payment</span>`}
                </td>
                <td class="amount-cell">
                    ${item.depositReturnAmount ? item.depositReturnAmount.toFixed(2) : '0.00'}
                </td>
                <td>
                    ${item.booking ? 
                        `<a href="/BookingCuongClas/Details?id=${item.booking.bookingCuongClaid}" 
                            class="badge bg-primary text-decoration-none" 
                            title="View booking details">
                            ${item.booking.customer.fullName} / ${item.booking.bookingCuongClaid}
                        </a>` : 
                        `<span class="text-muted">-</span>`}
                </td>
                <td>
                   ${item.processedByNavigation ? 
                        `<small class="text-muted">
                            <i class="fas fa-envelope me-1"></i>
                            ${item.processedByNavigation.email}
                        </small>` : 
                        `<span class="text-muted">-</span>`}
                </td>
                <td>
                    <div class="d-flex flex-wrap">
                        <a href="/PaymentCuongClas/Edit?id=${item.paymentCuongClaid}" class="btn-action btn-edit" title="Edit">
                            <i class="fas fa-edit"></i>
                        </a>
                        <a href="/PaymentCuongClas/Details?id=${item.paymentCuongClaid}" class="btn-action btn-view" title="View Details">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a href="/PaymentCuongClas/Delete?id=${item.paymentCuongClaid}" class="btn-action btn-delete" title="Delete"
                           onclick="return confirm('Are you sure you want to delete this payment record?')">
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>
                </td>
        </tr>
        `;

        // Add the new row to the table
        $('#paymentsTableBody').prepend(trPaymentCuongcla);
        
        // Trigger pagination update
        $(document).trigger('paymentsUpdated');
    });
</script>